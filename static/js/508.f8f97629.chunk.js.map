{"version":3,"file":"static/js/508.f8f97629.chunk.js","mappings":"6SACMA,EAAM,mCAENC,EAAW,KACjBC,EAAAA,GAAAA,SAAAA,QAFY,8BAKL,IAAMC,EAAa,mCAAG,+GAEJD,EAAAA,GAAAA,IAAA,uCAA0CF,IAFtC,cAEnBI,EAFmB,gBAGNA,EAAOC,KAAKC,QAHN,cAGnBD,EAHmB,yBAIlBA,GAJkB,kCAMzBE,QAAQC,MAAR,MANyB,0DAAH,qDAUbC,EAAS,mCAAG,WAAMC,GAAN,kGAEAR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,oBACMV,EADN,qBACsBC,IAHtB,cAEfG,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBE,QAAQC,MAAR,MARqB,0DAAH,sDAYTG,EAAW,mCAAG,WAAMD,GAAN,kGAEFR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,4BACcV,EADd,qBAC8BC,IAH5B,cAEjBG,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBE,QAAQC,MAAR,MARuB,0DAAH,sDAYXI,EAAW,mCAAG,WAAMF,GAAN,kGAEFR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,4BACcV,EADd,qBAC8BC,IAH5B,cAEjBG,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBE,QAAQC,MAAR,MARuB,0DAAH,sDAYXK,EAAU,mCAAG,WAAMC,GAAN,kGAEDZ,EAAAA,GAAAA,IAAA,iCACOF,EADP,qBACuBC,EADvB,kBACyCa,EADzC,gCAFC,cAEhBV,EAFgB,gBAKHA,EAAOC,KALJ,cAKhBA,EALgB,OAMtBE,QAAQQ,IAAIV,GANU,kBAOfA,GAPe,kCAStBE,QAAQC,MAAR,MATsB,0DAAH,qD,0JCpDVQ,EAAOC,EAAAA,GAAAA,GAAH,+KAUJC,EAAWD,EAAAA,GAAAA,GAAH,iFAKRE,EAASF,EAAAA,GAAAA,EAAH,oHAMNG,EAAOH,EAAAA,GAAAA,KAAH,wFAKJI,EAAOJ,EAAAA,GAAAA,EAAH,qHAMJK,EAAOL,EAAAA,GAAAA,EAAH,oF,SChCF,SAASM,EAAT,GAAqC,IAAfC,EAAc,EAAdA,WAC3BC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,WACnBtB,EAAO,IAAIuB,KAAKD,GAAYE,eAClC,OACE,UAACX,EAAD,YACE,UAACC,EAAD,uBACU,SAACC,EAAD,UAAOK,QAEjB,SAACJ,EAAD,UAAOhB,KACP,SAACiB,EAAD,UAAOI,MAGZ,CCRc,SAASI,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMvB,EAAKwB,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAalD,IAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE0B3B,EAAAA,EAAAA,IAAYF,GAFtC,OAEUsB,EAFV,OAGIC,EAAWD,EAAQ1B,SAHvB,gDAKIC,QAAQQ,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdyB,EACD,GAAE,CAAC9B,IACCsB,EAIL,OACE,UAAChB,EAAD,WACGgB,EAAQS,KAAI,SAAAC,GACX,OAAO,SAACnB,EAAD,CAAYC,WAAYkB,GAAaA,EAAOhC,GACpD,IAAG,MAGT,C","sources":["API/api.js","components/Reviews/Reviews.styled.js","components/Reviews/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\nconst language = 'en';\naxios.defaults.baseURL = URL;\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const dataMovieList = async () => {\n  try {\n    const server = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n    const data = await server.data.results;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const dataMovie = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\nexport const dataAuthors = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит оглядів для сторінки кінофільму\nexport const dataReviews = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const dataSearch = async query => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${query}&page=1&include_adult=false`\n    );\n    const data = await server.data;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  padding: 0;\n  display: flex;\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  padding: 10px;\n  border-bottom: 1px solid #0000002b;\n`;\n\nexport const Accent = styled.p`\n  font-size: 15px;\n  text-transform: uppercase;\n  color: #18344c;\n  margin-bottom: 5px;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n  margin-left: 20px;\n  font-weight: bold;\n`;\nexport const Data = styled.p`\n  font-size: 15px;\n  text-transform: lowercase;\n  color: #18344c;\n  margin-bottom: 20px;\n`;\nexport const Text = styled.p`\n  line-height: 1.4;\n  color: #053e70;\n  font-size: 16px;\n`;\n","import { ListItem, Accent, Span, Data, Text } from './Reviews.styled';\nexport default function ReviewItem({ reviewData }) {\n  const { author, content, created_at } = reviewData;\n  const data = new Date(created_at).toDateString();\n  return (\n    <ListItem>\n      <Accent>\n        Author: <Span>{author}</Span>\n      </Accent>\n      <Data>{data}</Data>\n      <Text>{content}</Text>\n    </ListItem>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { dataReviews } from 'API/api';\nimport { List } from './Reviews.styled';\nimport ReviewItem from './ReviewItem';\n\nexport default function Review() {\n  const [reviews, setReviews] = useState(null);\n  const id = JSON.parse(window.localStorage.getItem('currentId'));\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const reviews = await dataReviews(id);\n        setReviews(reviews.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [id]);\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <List>\n      {reviews.map(review => {\n        return <ReviewItem reviewData={review} key={review.id} />;\n      })}{' '}\n    </List>\n  );\n}\n"],"names":["KEY","language","axios","dataMovieList","server","data","results","console","error","dataMovie","id","dataAuthors","dataReviews","dataSearch","query","log","List","styled","ListItem","Accent","Span","Data","Text","ReviewItem","reviewData","author","content","created_at","Date","toDateString","Review","useState","reviews","setReviews","JSON","parse","window","localStorage","getItem","useEffect","getReviews","map","review"],"sourceRoot":""}
{"version":3,"file":"static/js/229.fd6c5d34.chunk.js","mappings":"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","sources":["API/api.js","pages/MainPage/MainPage.styled.js","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/ListBySearchItem/ListBySearchItem.jsx","components/ListBySearch/ListBySearch.jsx","pages/Search/Search.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\nconst language = 'en';\naxios.defaults.baseURL = URL;\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const dataMovieList = async () => {\n  try {\n    const server = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n    const data = await server.data.results;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const dataMovie = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\nexport const dataAuthors = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит оглядів для сторінки кінофільму\nexport const dataReviews = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const dataSearch = async query => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${query}&page=1&include_adult=false`\n    );\n    const data = await server.data;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nexport const List = styled.ul`\n  padding: 0;\n  display: flex;\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  border: 1px solid #0000002b;\n  width: 380px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\nexport const P = styled.p``;\nexport const NavigationLink = styled(NavLink)`\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: #d54a20;\n  }\n`;\nexport const Info = styled.div`\n  padding: 10px;\n  text-transform: lowercase;\n  background-color: white;\n  font-size: 15px;\n  color: black;\n`;\nexport const Accent = styled.p`\n  font-size: 20px;\n  text-transform: uppercase;\n`;\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nexport const ErMessage = styled(ErrorMessage)`\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(201, 49, 42);\n`;\nexport const Input = styled(Field)`\n  display: block;\n  background-color: #e1e6e9;\n  min-width: 250px;\n  padding: 10px 20px;\n  border-top: 1px solid rgb(27, 100, 154);\n  border-left: 1px solid rgb(27, 100, 154);\n  border-right: 1px solid white;\n  border-bottom: 1px solid white;\n  color: rgb(50, 50, 29);\n  font-size: 18px;\n`;\nexport const Forma = styled(Form)`\n  background-color: rgb(251, 251, 251);\n  border: 1px solid rgb(152, 154, 27);\n  padding: 10px;\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: rgb(87, 89, 11);\n  margin-bottom: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n`;\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 40px;\n  text-transform: uppercase;\n  font-size: 15px;\n  font-weight: bold;\n  background-color: #18344c;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  min-height: 44px;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background-color: #021b31;\n  }\n`;\n","import { Formik } from 'formik';\nimport { ErMessage, Input, Forma, Button } from './SearchForm.styled';\nconst formValues = {\n  query: '',\n};\n\nexport default function SearchForm({ updateQuery, updateQueryString }) {\n  const handleSubmit = (values, { resetForm }) => {\n    updateQueryString(values.query.toLowerCase());\n    updateQuery(values.query.toLowerCase());\n\n    resetForm();\n  };\n  return (\n    <Formik initialValues={formValues} onSubmit={handleSubmit}>\n      <Forma autoComplete=\"off\">\n        <Input\n          type=\"text\"\n          name=\"query\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Add search word\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // onChange={e => updateQueryString(e.target.value)}\n        />\n        <ErMessage name=\"name\" component=\"p\" />\n\n        <Button type=\"submit\">SEARCH</Button>\n      </Forma>\n    </Formik>\n  );\n}\n","import {\n  Item,\n  NavigationLink,\n  Info,\n  Accent,\n} from '../../pages/MainPage/MainPage.styled';\nconst IMG_URL = 'https://image.tmdb.org/t/p/original';\nlet imgPath = '';\nexport default function ListBySearchItem({ itemData, query }) {\n  const { id, original_title, release_date, poster_path } = itemData;\n\n  if (!poster_path) {\n    imgPath =\n      'https://www.designbolts.com/wp-content/uploads/2015/12/Minion-404-funny-page-404-error-design.jpg';\n  }\n  if (poster_path) {\n    imgPath = `${IMG_URL}${poster_path}`;\n  }\n  const img = `${imgPath}`;\n  return (\n    <Item>\n      <NavigationLink to={`${id}`} state={{ from: `/search?query=${query}` }}>\n        <img src={img} alt={original_title} width=\"380\" height=\"569.7\" />\n        <Info>\n          <Accent>{original_title}</Accent>\n          <p>Release date: {release_date}</p>\n        </Info>\n      </NavigationLink>\n    </Item>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { dataSearch } from 'API/api';\nimport { List } from '../../pages/MainPage/MainPage.styled';\nimport ListBySearchItem from './../ListBySearchItem/ListBySearchItem';\n\nexport const ListBySearch = ({ query }) => {\n  const [materials, setMaterials] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        const materials = await dataSearch(query);\n        setMaterials(materials.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovies();\n  }, [query]);\n  if (materials.length === 0) {\n    return;\n  }\n  return (\n    <List>\n      {materials.map(movie => {\n        return (\n          <ListBySearchItem itemData={movie} query={query} key={movie.id} />\n        );\n      })}{' '}\n    </List>\n  );\n};\n","/* eslint-disable no-unused-vars */\nimport { useState } from 'react';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ListBySearch } from 'components/ListBySearch/ListBySearch';\nexport default function Search() {\n  const [query, setQuery] = useState('');\n  // const [searchParams] = useSearchParams();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const updateQuery = values => {\n    setQuery(values);\n    localStorage.setItem('currentQuery', JSON.stringify(values));\n    // console.log('hello');\n  };\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <>\n      <SearchForm\n        updateQueryString={updateQueryString}\n        updateQuery={updateQuery}\n      />\n      {searchQuery && <ListBySearch query={searchQuery} />}\n    </>\n  );\n}\n"],"names":["KEY","language","axios","dataMovieList","server","data","results","console","error","dataMovie","id","dataAuthors","dataReviews","dataSearch","query","log","List","styled","Item","NavigationLink","NavLink","Info","Accent","ErMessage","ErrorMessage","Input","Field","Forma","Form","Button","formValues","SearchForm","updateQuery","updateQueryString","initialValues","onSubmit","values","resetForm","toLowerCase","autoComplete","type","name","placeholder","component","imgPath","ListBySearchItem","itemData","original_title","release_date","poster_path","img","to","state","from","src","alt","width","height","ListBySearch","useState","materials","setMaterials","useEffect","getMovies","length","map","movie","Search","setQuery","useSearchParams","searchParams","setSearchParams","searchQuery","get","localStorage","setItem","JSON","stringify"],"sourceRoot":""}
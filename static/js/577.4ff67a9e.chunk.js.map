{"version":3,"file":"static/js/577.4ff67a9e.chunk.js","mappings":"6SACMA,EAAM,mCAENC,EAAW,KACjBC,EAAAA,GAAAA,SAAAA,QAFY,8BAKL,IAAMC,EAAa,mCAAG,+GAEJD,EAAAA,GAAAA,IAAA,uCAA0CF,IAFtC,cAEnBI,EAFmB,gBAGNA,EAAOC,KAAKC,QAHN,cAGnBD,EAHmB,yBAIlBA,GAJkB,kCAMzBE,QAAQC,MAAR,MANyB,0DAAH,qDAUbC,EAAS,mCAAG,WAAMC,GAAN,kGAEAR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,oBACMV,EADN,qBACsBC,IAHtB,cAEfG,EAFe,gBAKFA,EAAOC,KALL,cAKfA,EALe,yBAMdA,GANc,kCAQrBE,QAAQC,MAAR,MARqB,0DAAH,sDAYTG,EAAW,mCAAG,WAAMD,GAAN,kGAEFR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,4BACcV,EADd,qBAC8BC,IAH5B,cAEjBG,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBE,QAAQC,MAAR,MARuB,0DAAH,sDAYXI,EAAW,mCAAG,WAAMF,GAAN,kGAEFR,EAAAA,GAAAA,IAAA,kBACRQ,EADQ,4BACcV,EADd,qBAC8BC,IAH5B,cAEjBG,EAFiB,gBAKJA,EAAOC,KALH,cAKjBA,EALiB,yBAMhBA,GANgB,kCAQvBE,QAAQC,MAAR,MARuB,0DAAH,sDAYXK,EAAU,mCAAG,WAAMC,GAAN,kGAEDZ,EAAAA,GAAAA,IAAA,iCACOF,EADP,qBACuBC,EADvB,kBACyCa,EADzC,gCAFC,cAEhBV,EAFgB,gBAKHA,EAAOC,KALJ,cAKhBA,EALgB,OAMtBE,QAAQQ,IAAIV,GANU,kBAOfA,GAPe,kCAStBE,QAAQC,MAAR,MATsB,0DAAH,qD,sJCpDVQ,EAAOC,EAAAA,GAAAA,GAAH,+KAUJC,EAAWD,EAAAA,GAAAA,GAAH,yEAIRE,EAAOF,EAAAA,GAAAA,IAAH,yIAOJG,EAASH,EAAAA,GAAAA,EAAH,0E,SCpBfI,EAAU,GACC,SAASC,EAAT,GAAkC,IAAdC,EAAa,EAAbA,UACzBC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UACvBD,IACHJ,EACE,qGAEAI,IACFJ,EAAO,UATK,uCASL,OAAgBI,IAEzB,IAAME,EAAG,UAAMN,GACf,OACE,UAACH,EAAD,YACE,gBAAKU,IAAKD,EAAKE,IAAKL,EAAMM,MAAM,MAAMC,OAAO,WAC7C,UAACZ,EAAD,YACE,SAACC,EAAD,UAASI,KACT,uCAAeE,UAItB,CCjBc,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMzB,EAAK0B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cAclD,IAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyB9B,EAAAA,EAAAA,IAAYD,GAFrC,OAEUwB,EAFV,OAGIC,EAAUD,EAAOQ,MAHrB,gDAKInC,QAAQQ,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASd4B,EACD,GAAE,CAACjC,IAECwB,EAIL,OACE,UAAClB,EAAD,WACGkB,EAAOU,KAAI,SAAAC,GACV,OAAO,SAACvB,EAAD,CAAUC,UAAWsB,GAAYA,EAAMnC,GAC/C,IAAG,MAGT,C","sources":["API/api.js","components/Cast/Cast.styled.js","components/Cast/CastItem.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\nconst language = 'en';\naxios.defaults.baseURL = URL;\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const dataMovieList = async () => {\n  try {\n    const server = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n    const data = await server.data.results;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const dataMovie = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\nexport const dataAuthors = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит оглядів для сторінки кінофільму\nexport const dataReviews = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const dataSearch = async query => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${query}&page=1&include_adult=false`\n    );\n    const data = await server.data;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  padding: 0;\n  display: flex;\n  width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  border: 1px solid #0000002b;\n  width: 380px;\n`;\nexport const Info = styled.div`\n  padding: 10px;\n  text-transform: lowercase;\n  background-color: white;\n  font-size: 15px;\n  color: black;\n`;\nexport const Accent = styled.p`\n  font-size: 20px;\n  text-transform: uppercase;\n`;\n","import { ListItem, Info, Accent } from './Cast.styled';\nconst IMG_URL = 'https://image.tmdb.org/t/p/original';\nlet imgPath = '';\nexport default function CastItem({ actorData }) {\n  const { name, profile_path, character } = actorData;\n  if (!profile_path) {\n    imgPath =\n      'https://www.designbolts.com/wp-content/uploads/2015/12/Minion-404-funny-page-404-error-design.jpg';\n  }\n  if (profile_path) {\n    imgPath = `${IMG_URL}${profile_path}`;\n  }\n  const img = `${imgPath}`;\n  return (\n    <ListItem>\n      <img src={img} alt={name} width=\"380\" height=\"569.7\" />\n      <Info>\n        <Accent>{name}</Accent>\n        <p>Character: {character}</p>\n      </Info>\n    </ListItem>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { dataAuthors } from 'API/api';\nimport { List } from './Cast.styled';\nimport CastItem from './CastItem';\n\nexport default function Cast() {\n  const [actors, setActors] = useState(null);\n  const id = JSON.parse(window.localStorage.getItem('currentId'));\n\n  useEffect(() => {\n    async function getActors() {\n      try {\n        const actors = await dataAuthors(id);\n        setActors(actors.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getActors();\n  }, [id]);\n\n  if (!actors) {\n    return;\n  }\n\n  return (\n    <List>\n      {actors.map(actor => {\n        return <CastItem actorData={actor} key={actor.id} />;\n      })}{' '}\n    </List>\n  );\n}\n"],"names":["KEY","language","axios","dataMovieList","server","data","results","console","error","dataMovie","id","dataAuthors","dataReviews","dataSearch","query","log","List","styled","ListItem","Info","Accent","imgPath","CastItem","actorData","name","profile_path","character","img","src","alt","width","height","Cast","useState","actors","setActors","JSON","parse","window","localStorage","getItem","useEffect","cast","getActors","map","actor"],"sourceRoot":""}
{"version":3,"file":"static/js/750.34ee7800.chunk.js","mappings":"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","sources":["API/api.js","pages/MovieDetailSearch/MovieDetail.styled.js","pages/MovieDetailSearch/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\nconst URL = 'https://api.themoviedb.org/';\nconst language = 'en';\naxios.defaults.baseURL = URL;\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці\nexport const dataMovieList = async () => {\n  try {\n    const server = await axios.get(`3/trending/movie/day?api_key=${KEY}`);\n    const data = await server.data.results;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит повної інформації про фільм для сторінки кінофільму\nexport const dataMovie = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит інформації про акторський склад для сторінки кінофільму\nexport const dataAuthors = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/credits?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// запит оглядів для сторінки кінофільму\nexport const dataReviews = async id => {\n  try {\n    const server = await axios.get(\n      `3/movie/${id}/reviews?api_key=${KEY}&language=${language}`\n    );\n    const data = await server.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n// пошук фільму за ключовим словом на сторінці фільмів\nexport const dataSearch = async query => {\n  try {\n    const server = await axios.get(\n      `3/search/movie?api_key=${KEY}&language=${language}&query=${query}&page=1&include_adult=false`\n    );\n    const data = await server.data;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavigationLink = styled(NavLink)`\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: #d54a20;\n  }\n`;\nexport const Box = styled.div`\n  width: 1200px;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n`;\nexport const Wrapper = styled.div`\n  padding: 50px;\n`;\nexport const Title = styled.h1`\n  color: #034986;\n  margin-bottom: 20px;\n`;\nexport const Data = styled.p`\n  color: #7e8c99;\n  margin-bottom: 5px;\n  font-size: 20px;\n`;\nexport const Popularity = styled.p`\n  color: #7e8c99;\n  margin-bottom: 10px;\n  font-size: 16px;\n`;\nexport const Overview = styled.p`\n  color: #455462;\n  font-size: 24px;\n`;\nexport const Nav = styled.nav`\n  margin-top: 30px;\n`;\nexport const Wrap = styled.div`\n  width: 1200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 30px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #0000002b;\n\n  font-size: 30px;\n  font-weight: bold;\n  text-transform: uppercase;\n`;\nexport const AddTitle = styled.h2`\n  font-size: 20px;\n  color: #034986;\n`;\nexport const GoBackLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 5px 20px;\n  font-size: 25px;\n  color: black;\n  border: 1px solid black;\n  margin-top: 20px;\n  border-radius: 5px;\n  text-transform: uppercase;\n  max-width: 150px;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { dataMovie } from 'API/api';\nimport {\n  NavigationLink,\n  Box,\n  Wrapper,\n  Title,\n  Data,\n  Popularity,\n  Overview,\n  Nav,\n  Wrap,\n  AddTitle,\n  GoBackLink,\n} from './MovieDetail.styled';\nconst IMG_URL = 'https://image.tmdb.org/t/p/original';\nlet imgPath = '';\nexport default function MovieDetail() {\n  const [material, setMaterial] = useState({});\n  const { id } = useParams();\n  const query = JSON.parse(window.localStorage.getItem('currentQuery'));\n  const location = useLocation();\n  console.log(location.state);\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    localStorage.setItem('currentId', JSON.stringify(id));\n\n    async function getMovie() {\n      try {\n        const movie = await dataMovie(id);\n        setMaterial(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovie();\n  }, [id]);\n  if (!material) {\n    return;\n  }\n  const {\n    title,\n    poster_path,\n    original_title,\n    popularity,\n    release_date,\n    overview,\n  } = material;\n  if (!poster_path) {\n    imgPath =\n      'https://media.istockphoto.com/vectors/cartoonish-yoga-cat-with-a-clock-and-a-lettering-phrase-please-wait-vector-id1291715830?k=20&m=1291715830&s=612x612&w=0&h=-6vPX8c2zREEaJo3cbxlDbNGAM97yiTHEWpSspmxjJc=';\n  }\n  if (poster_path) {\n    imgPath = `${IMG_URL}${poster_path}`;\n  }\n  const img = `${imgPath}`;\n  return (\n    <>\n      {' '}\n      <GoBackLink to={backLinkHref}>Go back</GoBackLink>\n      <Box>\n        <img src={img} alt={title} width=\"400\" />\n        <Wrapper>\n          <Title>{original_title}</Title>\n          <Data>Release date: {release_date}</Data>\n          <Popularity>Popularity: {popularity}</Popularity>\n          <Overview>Overview: {overview}</Overview>\n        </Wrapper>\n      </Box>\n      <Wrap>\n        <AddTitle>Additional info</AddTitle>\n        <Nav>\n          <NavigationLink to=\"cast\" state={{ from: `/search?query=${query}` }}>\n            Cast\n          </NavigationLink>\n          <NavigationLink\n            to=\"reviews\"\n            state={{ from: `/search?query=${query}` }}\n          >\n            Reviews\n          </NavigationLink>\n        </Nav>\n      </Wrap>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["KEY","language","axios","dataMovieList","server","data","results","console","error","dataMovie","id","dataAuthors","dataReviews","dataSearch","query","log","NavigationLink","styled","NavLink","Box","Wrapper","Title","Data","Popularity","Overview","Nav","Wrap","AddTitle","GoBackLink","imgPath","MovieDetail","useState","material","setMaterial","useParams","JSON","parse","window","localStorage","getItem","location","useLocation","state","backLinkHref","from","useEffect","movie","setItem","stringify","getMovie","title","poster_path","original_title","popularity","release_date","overview","img","to","src","alt","width"],"sourceRoot":""}